import{d as F,w as f}from"./DhZ9dMgW.js";import{g as C,d as l}from"./9ek7rKyT.js";const N=!0,L=N,p=[{name:"Manchester United",logo:"/teams/man-utd.svg"},{name:"Liverpool",logo:"/teams/liverpool.svg"},{name:"Manchester City",logo:"/teams/man-city.svg"},{name:"Arsenal",logo:"/teams/arsenal.svg"},{name:"Chelsea",logo:"/teams/chelsea.svg"},{name:"Tottenham",logo:"/teams/tottenham.svg"},{name:"Newcastle",logo:"/teams/newcastle.svg"},{name:"Brighton",logo:"/teams/brighton.svg"}],b=["Marcus Rashford","Mohamed Salah","Erling Haaland","Bukayo Saka","Raheem Sterling","Harry Kane","Bruno Fernandes","Kevin De Bruyne","Virgil van Dijk","Ruben Dias","Alisson Becker","Ederson","Casemiro","Declan Rice","Mason Mount","Phil Foden","Darwin Nunez","Gabriel Jesus","Son Heung-min","Alexander Isak","Jadon Sancho","Jack Grealish","Martin Odegaard","Thiago Silva","Andrew Robertson","Kyle Walker","Ben White","Joao Cancelo"];function D(){return{id:C(),email:"user@example.com",name:"John Doe",balance:1250,kycVerified:!0,createdAt:new Date}}function P(n=22){const s=[];for(let r=0;r<n;r++){const e=r<2?"GK":r<8?"DEF":r<16?"MID":"FWD",t=e==="GK"?8:e==="DEF"?7:e==="MID"?8.5:9;s.push({id:C(),name:b[r%b.length],team:p[Math.floor(r/11)%p.length].name,position:e,credits:t+Math.random()*3,points:Math.floor(Math.random()*15),selectedBy:Math.floor(Math.random()*80)+5,isPlaying:Math.random()>.1})}return s}function I(n=5){const s=[];for(let r=0;r<n;r++){const e=p[r%p.length],t=p[(r+1)%p.length];s.push({id:C(),homeTeam:e.name,awayTeam:t.name,homeTeamLogo:e.logo,awayTeamLogo:t.logo,startTime:new Date(Date.now()+(r+1)*24*60*60*1e3),league:"Premier League",status:"upcoming",players:P()})}return s}function A(n,s=8){const r=[{name:"Mega Contest",prizePool:1e4,entryFee:25,maxEntries:1e3,winners:100},{name:"Head to Head",prizePool:18,entryFee:10,maxEntries:2,winners:1},{name:"Small League",prizePool:500,entryFee:5,maxEntries:100,winners:10},{name:"Winner Takes All",prizePool:1e3,entryFee:50,maxEntries:25,winners:1},{name:"Beginner Contest",prizePool:100,entryFee:2,maxEntries:50,winners:5}],e=[];for(let t=0;t<s;t++){const a=r[t%r.length],o=Math.floor(Math.random()*a.maxEntries*.8);e.push({id:C(),matchId:n,name:a.name,title:a.name,matchTitle:`Match ${n}`,prizePool:a.prizePool,entryFee:a.entryFee,maxEntries:a.maxEntries,currentEntries:o,winners:a.winners,firstPrize:Math.floor(a.prizePool*.4),status:"open",createdAt:new Date})}return e}function W(n,s=10){const r=[],e=["signup_bonus","join","winnings","deposit"];for(let t=0;t<s;t++){const a=e[Math.floor(Math.random()*e.length)];let o=0,c="";switch(a){case"signup_bonus":o=1200,c="Welcome bonus";break;case"join":o=-(Math.floor(Math.random()*50)+5),c="Contest entry fee";break;case"winnings":o=Math.floor(Math.random()*500)+10,c="Contest winnings";break;case"deposit":o=Math.floor(Math.random()*200)+50,c="Wallet deposit";break}r.push({id:C(),userId:n,type:a,amount:o,description:c,status:"completed",createdAt:new Date(Date.now()-t*24*60*60*1e3)})}return r}const d=800;let i=null,M=[],w=[],k=[],y=[];function v(){M.length===0&&(M=I(),w=M.flatMap(n=>A(n.id)))}class u{static async login(s,r){return await l(d),s==="demo@picknwin.com"&&r==="demo123"?(i=D(),y=W(i.id),{success:!0,data:i}):{success:!1,error:"Invalid credentials"}}static async register(s,r,e){return await l(d),i={...D(),email:s,name:e,balance:1200},y=[{id:"welcome-bonus",userId:i.id,type:"signup_bonus",amount:1200,description:"Welcome bonus - â‚¬1200 free credits!",status:"completed",createdAt:new Date}],{success:!0,data:i}}static async getCurrentUser(){return await l(300),i?{success:!0,data:i}:{success:!1,error:"Not authenticated"}}static async logout(){return await l(300),i=null,{success:!0}}static async getMatches(){return await l(d),v(),{success:!0,data:M}}static async getMatch(s){await l(d),v();const r=M.find(e=>e.id===s);return r?{success:!0,data:r}:{success:!1,error:"Match not found"}}static async getContests(s){return await l(d),v(),{success:!0,data:s?w.filter(e=>e.matchId===s):w}}static async getContest(s){await l(d),v();const r=w.find(e=>e.id===s);return r?{success:!0,data:r}:{success:!1,error:"Contest not found"}}static async joinContest(s,r){if(await l(d),!i)return{success:!1,error:"Not authenticated"};const e=w.find(t=>t.id===s);return e?i.balance<e.entryFee?{success:!1,error:"Insufficient balance"}:(i.balance-=e.entryFee,e.currentEntries+=1,y.unshift({id:`join-${Date.now()}`,userId:i.id,type:"join",amount:-e.entryFee,description:`Joined ${e.name}`,status:"completed",createdAt:new Date}),{success:!0}):{success:!1,error:"Contest not found"}}static async getMyTeams(s){return await l(d),i?{success:!0,data:s?k.filter(e=>e.matchId===s):k}:{success:!1,error:"Not authenticated"}}static async saveTeam(s){if(await l(d),!i)return{success:!1,error:"Not authenticated"};const r={...s,id:`team-${Date.now()}`,userId:i.id,createdAt:new Date,updatedAt:new Date};return k.push(r),{success:!0,data:r}}static async getTransactions(){return await l(d),i?{success:!0,data:y}:{success:!1,error:"Not authenticated"}}static async addMoney(s){return await l(d),i?(i.balance+=s,y.unshift({id:`deposit-${Date.now()}`,userId:i.id,type:"deposit",amount:s,description:"Wallet deposit",status:"completed",createdAt:new Date}),{success:!0}):{success:!1,error:"Not authenticated"}}static async getLeaderboard(s){await l(d);const r=[];for(let e=0;e<50;e++)r.push({userId:`user-${e}`,userName:`Player ${e+1}`,teamName:`Team ${e+1}`,points:Math.floor(Math.random()*200)+50,rank:e+1,winnings:e<10?Math.floor(Math.random()*1e3)+100:void 0});return r.sort((e,t)=>t.points-e.points),r.forEach((e,t)=>{e.rank=t+1}),{success:!0,data:r}}}const m=f(null),H=F(m,n=>n!==null),g=f(!1),T={async login(n,s){g.set(!0);try{const r=await u.login(n,s);return r.success&&r.data?(m.set(r.data),L&&localStorage.setItem("user",JSON.stringify(r.data)),{success:!0}):{success:!1,error:r.error||"Login failed"}}catch{return{success:!1,error:"Network error"}}finally{g.set(!1)}},async register(n,s,r){g.set(!0);try{const e=await u.register(n,s,r);return e.success&&e.data?(m.set(e.data),L&&localStorage.setItem("user",JSON.stringify(e.data)),{success:!0}):{success:!1,error:e.error||"Registration failed"}}catch{return{success:!1,error:"Network error"}}finally{g.set(!1)}},async logout(){g.set(!0);try{await u.logout(),m.set(null),L&&localStorage.removeItem("user")}catch(n){console.error("Logout error:",n)}finally{g.set(!1)}},async loadFromStorage(){{const n=localStorage.getItem("user");if(n)try{const s=JSON.parse(n),r=await u.getCurrentUser();r.success&&r.data?m.set(r.data):localStorage.removeItem("user")}catch{localStorage.removeItem("user")}}},updateBalance(n){m.update(s=>s&&{...s,balance:n})},updateProfile(n){m.update(s=>{if(s){const r={...s,...n};return localStorage.setItem("user",JSON.stringify(r)),r}return s})}};T.loadFromStorage();const x={matches:[],selectedMatch:null,isLoading:!1,error:null};function B(){const{subscribe:n,set:s,update:r}=f(x);return{subscribe:n,async loadMatches(){r(e=>({...e,isLoading:!0,error:null}));try{const e=await u.getMatches();e.success?r(t=>({...t,matches:e.data,isLoading:!1})):r(t=>({...t,isLoading:!1,error:e.error||"Failed to load matches"}))}catch{r(t=>({...t,isLoading:!1,error:"Network error"}))}},async loadMatch(e){r(t=>({...t,isLoading:!0,error:null}));try{const t=await u.getMatch(e);return t.success?(r(a=>({...a,selectedMatch:t.data,isLoading:!1})),t.data):(r(a=>({...a,isLoading:!1,error:t.error||"Failed to load match"})),null)}catch{return r(a=>({...a,isLoading:!1,error:"Network error"})),null}},setSelectedMatch(e){r(t=>({...t,selectedMatch:e}))},clearError(){r(e=>({...e,error:null}))}}}const _=B(),$={contests:[],selectedContest:null,isLoading:!1,error:null};function z(){const{subscribe:n,set:s,update:r}=f($);return{subscribe:n,async loadContests(e){r(t=>({...t,isLoading:!0,error:null}));try{const t=await u.getContests(e);t.success?r(a=>({...a,contests:t.data,isLoading:!1})):r(a=>({...a,isLoading:!1,error:t.error||"Failed to load contests"}))}catch{r(a=>({...a,isLoading:!1,error:"Network error"}))}},async loadContest(e){r(t=>({...t,isLoading:!0,error:null}));try{const t=await u.getContest(e);return t.success?(r(a=>({...a,selectedContest:t.data,isLoading:!1})),t.data):(r(a=>({...a,isLoading:!1,error:t.error||"Failed to load contest"})),null)}catch{return r(a=>({...a,isLoading:!1,error:"Network error"})),null}},async joinContest(e,t){try{const a=await u.joinContest(e,t);return a.success?(r(o=>({...o,contests:o.contests.map(c=>c.id===e?{...c,currentEntries:c.currentEntries+1}:c)})),{success:!0}):{success:!1,error:a.error}}catch{return{success:!1,error:"Network error"}}},setSelectedContest(e){r(t=>({...t,selectedContest:e}))},clearError(){r(e=>({...e,error:null}))}}}const V=z(),J={transactions:[],balance:0,bonusBalance:0,winningsBalance:0,isLoading:!1,error:null};function K(){const{subscribe:n,set:s,update:r}=f(J);return{subscribe:n,async loadTransactions(){r(e=>({...e,isLoading:!0,error:null}));try{const e=await u.getTransactions();e.success?r(t=>({...t,transactions:e.data,isLoading:!1})):r(t=>({...t,isLoading:!1,error:e.error||"Failed to load transactions"}))}catch{r(t=>({...t,isLoading:!1,error:"Network error"}))}},async addMoney(e,t){r(a=>({...a,isLoading:!0,error:null}));try{const a=await u.addMoney(e);if(a.success){await this.loadTransactions();const o=await u.getCurrentUser();return o.success&&T.updateBalance(o.data.balance),{success:!0}}else return r(o=>({...o,isLoading:!1,error:a.error||"Failed to add money"})),{success:!1,error:a.error}}catch{return r(o=>({...o,isLoading:!1,error:"Network error"})),{success:!1,error:"Network error"}}},addTransaction(e){r(t=>({...t,transactions:[e,...t.transactions]}))},clearError(){r(e=>({...e,error:null}))}}}const Y=K(),j={teams:[],selectedTeam:null,isLoading:!1,error:null,userStats:null};function R(){const{subscribe:n,set:s,update:r}=f(j);return{subscribe:n,async loadUserStats(){try{const e={totalTeams:15,contestsJoined:42,contestsWon:8,totalWinnings:2450};r(t=>({...t,userStats:e}))}catch(e){console.error("Failed to load user stats:",e)}},async loadTeams(e){r(t=>({...t,isLoading:!0,error:null}));try{const t=await u.getMyTeams(e);t.success?r(a=>({...a,teams:t.data,isLoading:!1})):r(a=>({...a,isLoading:!1,error:t.error||"Failed to load teams"}))}catch{r(a=>({...a,isLoading:!1,error:"Network error"}))}},async saveTeam(e){r(t=>({...t,isLoading:!0,error:null}));try{const t=await u.saveTeam(e);return t.success?(r(a=>({...a,teams:[...a.teams,t.data],isLoading:!1})),{success:!0,data:t.data}):(r(a=>({...a,isLoading:!1,error:t.error||"Failed to save team"})),{success:!1,error:t.error})}catch{return r(a=>({...a,isLoading:!1,error:"Network error"})),{success:!1,error:"Network error"}}},setSelectedTeam(e){r(t=>({...t,selectedTeam:e}))},clearError(){r(e=>({...e,error:null}))}}}const q=R(),E={selectedPlayers:[],captain:null,viceCaptain:null,totalCredits:100,usedCredits:0,teamName:"",validationErrors:[]};function G(){const{subscribe:n,set:s,update:r}=f(E);return{subscribe:n,addPlayer(e){r(t=>{if(t.selectedPlayers.length>=11)return{...t,validationErrors:["Team is full (11 players)"]};if(t.selectedPlayers.find(h=>h.id===e.id))return{...t,validationErrors:["Player already selected"]};const a=t.usedCredits+e.credits;if(a>t.totalCredits)return{...t,validationErrors:["Not enough credits"]};const o=t.selectedPlayers.filter(h=>h.position===e.position).length,c={GK:1,DEF:5,MID:5,FWD:3};return o>=c[e.position]?{...t,validationErrors:[`Maximum ${c[e.position]} ${e.position} players allowed`]}:t.selectedPlayers.filter(h=>h.team===e.team).length>=6?{...t,validationErrors:["Maximum 6 players from same team"]}:{...t,selectedPlayers:[...t.selectedPlayers,e],usedCredits:a,validationErrors:[]}})},removePlayer(e){r(t=>{const a=t.selectedPlayers.find(S=>S.id===e);if(!a)return t;const o=t.selectedPlayers.filter(S=>S.id!==e),c=t.usedCredits-a.credits;return{...t,selectedPlayers:o,usedCredits:c,captain:t.captain?.id===e?null:t.captain,viceCaptain:t.viceCaptain?.id===e?null:t.viceCaptain,validationErrors:[]}})},setCaptain(e){r(t=>({...t,captain:e,viceCaptain:t.viceCaptain?.id===e.id?null:t.viceCaptain}))},setViceCaptain(e){r(t=>({...t,viceCaptain:e,captain:t.captain?.id===e.id?null:t.captain}))},setTeamName(e){r(t=>({...t,teamName:e}))},validateTeam(){r(e=>{const t=[];e.selectedPlayers.length!==11&&t.push("Select exactly 11 players"),e.captain||t.push("Select a captain"),e.viceCaptain||t.push("Select a vice captain"),e.teamName.trim()||t.push("Enter team name");const a={GK:0,DEF:0,MID:0,FWD:0};return e.selectedPlayers.forEach(o=>{a[o.position]++}),a.GK!==1&&t.push("Select exactly 1 goalkeeper"),(a.DEF<3||a.DEF>5)&&t.push("Select 3-5 defenders"),(a.MID<3||a.MID>5)&&t.push("Select 3-5 midfielders"),(a.FWD<1||a.FWD>3)&&t.push("Select 1-3 forwards"),{...e,validationErrors:t}})},reset(){s(E)},loadTeam(e){r(t=>({...t,selectedPlayers:e.players,captain:e.players.find(a=>a.id===e.captain)||null,viceCaptain:e.players.find(a=>a.id===e.viceCaptain)||null,teamName:e.name,usedCredits:e.players.reduce((a,o)=>a+o.credits,0),validationErrors:[]}))}}}G();export{g as a,T as b,V as c,H as i,_ as m,q as t,m as u,Y as w};
